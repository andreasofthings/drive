{
  "version": 3,
  "sources": ["../../@googleworkspace/drive-picker-element/src/utils.ts", "../../@googleworkspace/drive-picker-element/src/drive-picker/drive-picker-element.ts", "../../@googleworkspace/drive-picker-element/src/drive-picker/drive-picker-docs-view-element.ts", "../../@googleworkspace/drive-picker-element/src/index.ts"],
  "sourcesContent": ["/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst GAPI_URL = \"https://apis.google.com/js/api.js\";\nexport const GSI_URL = \"https://accounts.google.com/gsi/client\";\n\nexport async function loadApi(api = \"client:picker\"): Promise<typeof google> {\n\tif (!window.gapi) {\n\t\tawait injectScript(GAPI_URL);\n\t}\n\n\tawait new Promise<void>((r) => {\n\t\twindow.gapi.load(api, r);\n\t});\n\n\treturn window.google;\n}\n\nexport class ClientConfigError extends Error {\n\tconstructor(\n\t\tpublic readonly configError: google.accounts.oauth2.ClientConfigError,\n\t) {\n\t\tsuper(configError.message);\n\t}\n}\n\nexport async function requestAccessToken(\n\ttokenClientConfig: Omit<\n\t\tgoogle.accounts.oauth2.TokenClientConfig,\n\t\t\"callback\" | \"error_callback\"\n\t>,\n): Promise<google.accounts.oauth2.TokenResponse> {\n\tif (!window.google?.accounts?.oauth2) {\n\t\tawait injectScript(GSI_URL);\n\t}\n\treturn new Promise((resolve, reject) => {\n\t\tconst client = window.google.accounts.oauth2.initTokenClient({\n\t\t\t...tokenClientConfig,\n\t\t\tcallback: resolve,\n\t\t\terror_callback: reject,\n\t\t});\n\n\t\tclient.requestAccessToken();\n\t});\n}\n\nexport async function injectScript(src: string): Promise<void> {\n\treturn new Promise((resolve, reject) => {\n\t\tif (!document.querySelector(`script[src=\"${src}\"]`)) {\n\t\t\tdocument.head.appendChild(\n\t\t\t\tObject.assign(document.createElement(\"script\"), {\n\t\t\t\t\tsrc,\n\t\t\t\t\tonload: resolve,\n\t\t\t\t\tonerror: reject,\n\t\t\t\t}),\n\t\t\t);\n\t\t} else {\n\t\t\tresolve();\n\t\t}\n\t});\n}\n\nexport function getNumberAttribute(\n\telement: Element,\n\tname: string,\n): number | null {\n\tconst value = element.getAttribute(name);\n\treturn value ? Number(value) : null;\n}\n\nexport enum BoolAttrWithDefault {\n\tFALSE = 0,\n\tTRUE = 1,\n\tDEFAULT = 2,\n}\n\nexport function getBoolAttr(element: Element, name: string): boolean {\n\treturn element.hasAttribute(name);\n}\n\nexport function getBoolAttrWithDefault(\n\telement: Element,\n\tname: string,\n): BoolAttrWithDefault {\n\tconst attributeValue = element.getAttribute(name)?.toUpperCase();\n\n\tif (!attributeValue) {\n\t\treturn BoolAttrWithDefault.DEFAULT;\n\t}\n\n\tconst value =\n\t\tBoolAttrWithDefault[attributeValue as keyof typeof BoolAttrWithDefault];\n\n\tif (value !== undefined) {\n\t\treturn value;\n\t}\n\n\tthrow new Error(\n\t\t`Invalid value, \"${attributeValue}\", for attribute ${name}. Must be one of ${Object.keys(BoolAttrWithDefault).filter(Number.isNaN).join(\", \")}`,\n\t);\n}\n\nexport function setBoolAttrWithDefault<T>(\n\tname: string,\n\telement: Element,\n\tsetter: (value: boolean) => T,\n\tinstance: T,\n): T {\n\tconst attr = getBoolAttrWithDefault(element, name);\n\n\tif (attr === BoolAttrWithDefault.DEFAULT) {\n\t\treturn instance;\n\t}\n\n\treturn setter.call(instance, attr === BoolAttrWithDefault.TRUE);\n}\n", "/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n\tgetBoolAttr,\n\tgetNumberAttribute,\n\tloadApi,\n\trequestAccessToken,\n\tsetBoolAttrWithDefault,\n} from \"../utils\";\n\ntype View = google.picker.DocsView;\n\ninterface DrivePickerDocsViewElement extends HTMLElement {\n\tview: google.picker.DocsView;\n}\n\nexport type OAuthErrorEvent = CustomEvent<\n\t| google.accounts.oauth2.ClientConfigError\n\t| google.accounts.oauth2.TokenResponse\n>;\nexport type OAuthResponseEvent =\n\tCustomEvent<google.accounts.oauth2.TokenResponse>;\nexport type PickerCanceledEvent = CustomEvent<google.picker.ResponseObject>;\nexport type PickerPickedEvent = CustomEvent<google.picker.ResponseObject>;\nexport type PickerErrorEvent = CustomEvent<unknown>;\n\ndeclare global {\n\tinterface GlobalEventHandlersEventMap {\n\t\t/** @deprecated - Use \"picker-oauth-error\" */\n\t\t\"picker:authenticated\": CustomEvent<{ token: string }>;\n\t\t/** @deprecated - Use \"picker-oauth-error\" */\n\t\t\"picker:oauth:error\": OAuthErrorEvent;\n\t\t\"picker-oauth-error\": OAuthErrorEvent;\n\t\t/** @deprecated - Use \"picker-oauth-response\" */\n\t\t\"picker:oauth:response\": OAuthResponseEvent;\n\t\t\"picker-oauth-response\": OAuthResponseEvent;\n\t\t/** @deprecated - Use \"picker-canceled\" */\n\t\t\"picker:canceled\": PickerCanceledEvent;\n\t\t\"picker-canceled\": PickerCanceledEvent;\n\t\t/** @deprecated - Use \"picker-picked\" */\n\t\t\"picker:picked\": PickerPickedEvent;\n\t\t\"picker-picked\": PickerPickedEvent;\n\t\t/** @deprecated - Use \"picker-error\" */\n\t\t\"picker:error\": PickerErrorEvent;\n\t\t\"picker-error\": PickerErrorEvent;\n\t}\n}\n\n/**\n * The `drive-picker` web component provides a convenient way to declaratively\n * build\n * [`google.picker.Picker`](https://developers.google.com/drive/picker/reference/picker)\n * by using the component attributes mapped to the corresponding methods of\n * [`google.picker.PickerBuilder`](https://developers.google.com/drive/picker/reference/picker.pickerbuilder).\n *\n * @element drive-picker\n *\n * @fires {PickerCanceledEvent} picker-canceled - Triggered when the user cancels the picker dialog. See [`ResponseObject`](https://developers.google.com/drive/picker/reference/picker.responseobject).\n * @fires {PickerPickedEvent} picker-picked - Triggered when the user picks one or more items. See [`ResponseObject`](https://developers.google.com/drive/picker/reference/picker.responseobject).\n * @fires {PickerErrorEvent} picker-error - Triggered when an error occurs. See [`ResponseObject`](https://developers.google.com/drive/picker/reference/picker.responseobject).\n * @fires {OAuthErrorEvent} picker-oauth-error - Triggered when an error occurs in the OAuth flow. See the [error guide](https://developers.google.com/identity/oauth2/web/guides/error). Note that the `TokenResponse` object can have error fields.\n * @fires {OAuthResponseEvent} picker-oauth-response - Triggered when an OAuth flow completes. See the [token model guide](https://developers.google.com/identity/oauth2/web/guides/use-token-model).\n *\n * @slot - The default slot contains View elements to display in the picker.\n * Each View element should implement a property `view` of type\n * `google.picker.View`.\n * @attr {string} app-id - The Google Drive app ID. See [`PickerBuilder.setAppId`](https://developers.google.com/drive/picker/reference/picker.pickerbuilder.setappid).\n * @attr {string} client-id - The OAuth 2.0 client ID. See [Using OAuth 2.0 to Access Google APIs](https://developers.google.com/identity/protocols/oauth2).\n * @attr {string} developer-key - The API key for accessing Google Picker API. See [`PickerBuilder.setDeveloperKey`](https://developers.google.com/drive/picker/reference/picker.pickerbuilder.setdeveloperkey).\n * @attr {number} [debounce-delay=0] - The debounce delay in milliseconds before building the picker after an attribute change.\n * @attr {\"default\"|\"true\"|\"false\"} hide-title-bar - Hides the title bar of the\n * picker if set to true. See [`PickerBuilder.hideTitleBar`](https://developers.google.com/drive/picker/reference/picker.pickerbuilder.hidetitlebar).\n * @attr {string} locale - The locale to use for the picker. See [`PickerBuilder.setLocale`](https://developers.google.com/drive/picker/reference/picker.pickerbuilder.setlocale).\n * @attr {number} max-items - The maximum number of items that can be selected. See [`PickerBuilder.setMaxItems`](https://developers.google.com/drive/picker/reference/picker.pickerbuilder.setmaxitems).\n * @attr {boolean} mine-only - If set to true, only shows files owned by the\n * user. See [`PickerBuilder.enableFeature`](https://developers.google.com/drive/picker/reference/picker.pickerbuilder.enablefeature).\n * @attr {boolean} multiselect - Enables multiple file selection if set to true. See [`PickerBuilder.enableFeature`](https://developers.google.com/drive/picker/reference/picker.pickerbuilder.enablefeature).\n * @attr {boolean} nav-hidden - Hides the navigation pane if set to true. See [`PickerBuilder.enableFeature`](https://developers.google.com/drive/picker/reference/picker.pickerbuilder.enablefeature).\n * @attr {string} oauth-token - The OAuth 2.0 token for authentication. See [`PickerBuilder.setOAuthToken`](https://developers.google.com/drive/picker/reference/picker.pickerbuilder.setoauthtoken).\n * @attr {string} origin - The origin parameter for the picker. See [`PickerBuilder.setOrigin`](https://developers.google.com/drive/picker/reference/picker.pickerbuilder.setorigin).\n * @attr {string} relay-url - The relay URL for the picker. See [`PickerBuilder.setRelayUrl`](https://developers.google.com/drive/picker/reference/picker.pickerbuilder.setrelayurl).\n * @attr {string} scope - The OAuth 2.0 scope for the picker. The default is `https://www.googleapis.com/auth/drive.file`. See [Drive API scopes](https://developers.google.com/drive/api/guides/api-specific-auth#drive-scopes).\n * @attr {string} title - The title of the picker. See [`PickerBuilder.setTitle`](https://developers.google.com/drive/picker/reference/picker.pickerbuilder.settitle).\n * @attr {string} hd - The hosted domain to restrict sign-in to.  (Optional)  See the `hd` field in the OpenID Connect docs.\n * @attr {boolean} include-granted-scopes - Enables applications to use incremental authorization. See [`TokenClientConfig.include_granted_scopes`](https://developers.google.com/identity/oauth2/web/reference/js-reference#TokenClientConfig).\n * @attr {string} login-hint - An email address or an ID token 'sub' value. Google will use the value as a hint of which user to sign in. See the `login_hint` field in the OpenID Connect docs.\n * @attr {\"\"|\"none\"|\"consent\"|\"select_account\"} prompt - A space-delimited, case-sensitive list of prompts to present the user.  See [`TokenClientConfig.prompt`](https://developers.google.com/identity/oauth2/web/reference/js-reference#TokenClientConfig)\n *\n * @example\n *\n *```html\n *<drive-picker\n *  app-id=\"246724281745\"\n *  client-id=\"246724281745-v9ouai8ood5o69r3ug29aaqeqflomijd.apps.googleusercontent.com\"\n *>\n *  <drive-picker-docs-view></drive-picker-docs-view>\n *</drive-picker>\n *```\n *\n */\nexport class DrivePickerElement extends HTMLElement {\n\tstatic get observedAttributes() {\n\t\treturn [\n\t\t\t\"app-id\",\n\t\t\t\"client-id\",\n\t\t\t\"debounce-delay\",\n\t\t\t\"developer-key\",\n\t\t\t\"hide-title-bar\",\n\t\t\t\"locale\",\n\t\t\t\"max-items\",\n\t\t\t\"mine-only\",\n\t\t\t\"multiselect\",\n\t\t\t\"nav-hidden\",\n\t\t\t\"oauth-token\",\n\t\t\t\"origin\",\n\t\t\t\"relay-url\",\n\t\t\t\"scope\",\n\t\t\t\"title\",\n\t\t];\n\t}\n\tprivate picker: google.picker.Picker | undefined;\n\tprivate observer: MutationObserver | undefined;\n\tprivate google: typeof google | undefined;\n\tprivate loading: Promise<void> | undefined;\n\tprivate debounceTimer: number | undefined;\n\n\t/**\n\t * The visibility of the picker.\n\t */\n\tpublic get visible(): boolean {\n\t\treturn Boolean(this.picker?.isVisible());\n\t}\n\n\t/**\n\t * Controls the visibility of the picker after the picker dialog has been\n\t * closed. If any of the attributes change, the picker will be rebuilt and\n\t * the visibility will be reset.\n\t */\n\tset visible(value: boolean) {\n\t\tthis.picker?.setVisible(value);\n\t}\n\n\tpublic get tokenClientConfig(): Omit<\n\t\tgoogle.accounts.oauth2.TokenClientConfig,\n\t\t\"callback\" | \"error_callback\"\n\t> {\n\t\tconst clientId = this.getAttribute(\"client-id\");\n\t\tconst scope =\n\t\t\tthis.getAttribute(\"scope\") ??\n\t\t\t\"https://www.googleapis.com/auth/drive.file\";\n\n\t\tif (!clientId || !scope) {\n\t\t\tthrow new Error(\"client-id and scope are required attributes\");\n\t\t}\n\n\t\treturn {\n\t\t\tclient_id: clientId,\n\t\t\thd: this.getAttribute(\"hd\") ?? undefined,\n\t\t\tinclude_granted_scopes: Boolean(\n\t\t\t\tthis.getAttribute(\"include-granted-scope\"),\n\t\t\t),\n\t\t\tlogin_hint: this.getAttribute(\"login-hint\") ?? undefined,\n\t\t\tprompt: (this.getAttribute(\"prompt\") ??\n\t\t\t\t\"\") as google.accounts.oauth2.TokenClientConfig[\"prompt\"],\n\t\t\tscope,\n\t\t};\n\t}\n\n\tattributeChangedCallback() {\n\t\tthis.scheduleBuild();\n\t}\n\n\tprivate scheduleBuild() {\n\t\t// Clear any previously scheduled build to ensure we don't build multiple times\n\t\tclearTimeout(this.debounceTimer);\n\n\t\t// Schedule a new build to run after a short delay.\n\t\t// This coalesces multiple rapid changes into a single build call.\n\t\tthis.debounceTimer = window.setTimeout(() => {\n\t\t\tthis.build();\n\t\t}, getNumberAttribute(this, \"debounce-delay\") ?? 0);\n\t}\n\n\tprivate async build() {\n\t\tthis.picker?.dispose();\n\n\t\t// this await is necessary as an attribute may have changed\n\t\t// prior to the API initially being loaded\n\t\tawait this.loading;\n\n\t\tif (!this.google) return;\n\n\t\tlet builder = new this.google.picker.PickerBuilder().setCallback(\n\t\t\t(data: google.picker.ResponseObject) => {\n\t\t\t\tthis.callbackToDispatchEvent(data);\n\t\t\t},\n\t\t);\n\n\t\tconst appId = this.getAttribute(\"app-id\");\n\t\tif (appId !== null) builder = builder.setAppId(appId);\n\n\t\tconst developerKey = this.getAttribute(\"developer-key\");\n\t\tif (developerKey !== null) builder = builder.setDeveloperKey(developerKey);\n\n\t\tconst locale = this.getAttribute(\"locale\");\n\t\tif (locale !== null)\n\t\t\tbuilder = builder.setLocale(locale as google.picker.Locales);\n\n\t\tconst maxItems = getNumberAttribute(this, \"max-items\");\n\t\tif (maxItems !== null) builder = builder.setMaxItems(maxItems);\n\n\t\tconst origin = this.getAttribute(\"origin\");\n\t\tif (origin !== null) builder = builder.setOrigin(origin);\n\n\t\tconst relayUrl = this.getAttribute(\"relay-url\");\n\t\tif (relayUrl !== null) builder = builder.setRelayUrl(relayUrl);\n\n\t\tconst title = this.getAttribute(\"title\");\n\t\tif (title !== null) builder = builder.setTitle(title);\n\n\t\tsetBoolAttrWithDefault(\n\t\t\t\"hide-title-bar\",\n\t\t\tthis,\n\t\t\tbuilder.hideTitleBar,\n\t\t\tbuilder,\n\t\t);\n\n\t\t// OAuth token is required either as an attribute or from the OAuth flow using the client ID and scope\n\t\tconst oauthToken =\n\t\t\tthis.getAttribute(\"oauth-token\") ?? (await this.requestAccessToken());\n\n\t\tif (!oauthToken) return;\n\n\t\t// biome-ignore lint/style/noNonNullAssertion: <explanation>\n\t\tbuilder = builder.setOAuthToken(oauthToken!);\n\n\t\tif (getBoolAttr(this, \"multiselect\")) {\n\t\t\tbuilder = builder.enableFeature(\n\t\t\t\tthis.google.picker.Feature.MULTISELECT_ENABLED,\n\t\t\t);\n\t\t}\n\n\t\tif (getBoolAttr(this, \"mine-only\")) {\n\t\t\tbuilder = builder.enableFeature(this.google.picker.Feature.MINE_ONLY);\n\t\t}\n\n\t\tif (getBoolAttr(this, \"nav-hidden\")) {\n\t\t\tbuilder = builder.enableFeature(this.google.picker.Feature.NAV_HIDDEN);\n\t\t}\n\n\t\tfor (const view of this.views) {\n\t\t\tbuilder = builder.addView(view);\n\t\t}\n\n\t\tthis.picker = builder.build();\n\n\t\tthis.picker.setVisible(true);\n\t}\n\n\t/**\n\t * The `google.Picker.View` objects to display in the picker as defined by the slot elements.\n\t */\n\tprivate get views(): (View | google.picker.ViewId)[] {\n\t\tconst views = nestedViews(this);\n\t\treturn views.length ? views : [\"all\" as google.picker.ViewId];\n\t}\n\n\tasync connectedCallback(): Promise<void> {\n\t\tthis.loading = loadApi().then((google) => {\n\t\t\tthis.google = google;\n\t\t});\n\n\t\t// Watch for changes in the picker element slot and their attributes\n\t\tthis.observer = new MutationObserver((mutations) => {\n\t\t\tconst filteredMutations = mutations.filter(\n\t\t\t\t(mutation) =>\n\t\t\t\t\tmutation.type === \"childList\" ||\n\t\t\t\t\t(mutation.type === \"attributes\" && mutation.target !== this),\n\t\t\t);\n\n\t\t\tif (filteredMutations.length) {\n\t\t\t\tthis.scheduleBuild();\n\t\t\t}\n\t\t});\n\n\t\tthis.observer?.observe(this, {\n\t\t\tchildList: true,\n\t\t\tsubtree: true,\n\t\t\tattributes: true,\n\t\t});\n\t}\n\n\tprivate callbackToDispatchEvent(detail: google.picker.ResponseObject) {\n\t\t// TODO - remove deprecated events\n\t\tlet eventTypes: (keyof GlobalEventHandlersEventMap)[];\n\n\t\tswitch (detail.action) {\n\t\t\tcase google.picker.Action.CANCEL:\n\t\t\t\teventTypes = [\"picker:canceled\", \"picker-canceled\"];\n\t\t\t\tbreak;\n\t\t\tcase google.picker.Action.PICKED:\n\t\t\t\teventTypes = [\"picker:picked\", \"picker-picked\"];\n\t\t\t\tbreak;\n\t\t\tcase google.picker.Action.ERROR:\n\t\t\t\teventTypes = [\"picker:error\", \"picker-error\"];\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn;\n\t\t}\n\n\t\tfor (const eventType of eventTypes) {\n\t\t\tthis.dispatchEvent(\n\t\t\t\tnew CustomEvent(eventType, {\n\t\t\t\t\tdetail,\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate async requestAccessToken(): Promise<string | undefined> {\n\t\treturn requestAccessToken(this.tokenClientConfig)\n\t\t\t.then((response) => {\n\t\t\t\tconst { access_token: token } = response;\n\t\t\t\tif (!token) {\n\t\t\t\t\tthis.dispatchEvent(\n\t\t\t\t\t\tnew CustomEvent(\"picker:oauth:error\", {\n\t\t\t\t\t\t\tdetail: response,\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t\tthis.dispatchEvent(\n\t\t\t\t\t\tnew CustomEvent(\"picker-oauth-error\", {\n\t\t\t\t\t\t\tdetail: response,\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\t// TODO - remove deprecated event\n\t\t\t\tthis.dispatchEvent(\n\t\t\t\t\tnew CustomEvent(\"picker:authenticated\", { detail: { token } }),\n\t\t\t\t);\n\t\t\t\tthis.dispatchEvent(\n\t\t\t\t\tnew CustomEvent(\"picker-oauth-response\", { detail: response }),\n\t\t\t\t);\n\t\t\t\t// TODO - remove deprecated event\n\t\t\t\tthis.dispatchEvent(\n\t\t\t\t\tnew CustomEvent(\"picker:oauth:response\", { detail: response }),\n\t\t\t\t);\n\t\t\t\tthis.dispatchEvent(\n\t\t\t\t\tnew CustomEvent(\"picker-oauth-response\", { detail: response }),\n\t\t\t\t);\n\t\t\t\treturn token;\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\t// TODO - remove deprecated event\n\t\t\t\tthis.dispatchEvent(\n\t\t\t\t\tnew CustomEvent(\"picker:oauth:error\", {\n\t\t\t\t\t\tdetail: error,\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t\tthis.dispatchEvent(\n\t\t\t\t\tnew CustomEvent(\"picker-oauth-error\", {\n\t\t\t\t\t\tdetail: error,\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t\treturn undefined;\n\t\t\t});\n\t}\n\n\tdisconnectedCallback(): void {\n\t\tthis.picker?.dispose();\n\t}\n}\n\nfunction isView(obj: HTMLElement): obj is DrivePickerDocsViewElement {\n\treturn \"view\" in obj && obj.view instanceof window.google.picker.View;\n}\n\nfunction filterElementsToViewOrViewGroup(\n\telements: Array<HTMLElement>,\n): Array<View> {\n\treturn elements\n\t\t.filter((element) => isView(element))\n\t\t.map((element) => element.view);\n}\n\nfunction nestedViews(target: HTMLElement, selector = \"*\"): Array<View> {\n\treturn filterElementsToViewOrViewGroup(\n\t\tArray.from(target.querySelectorAll<HTMLElement>(selector)),\n\t);\n}\n", "/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { setBoolAttrWithDefault } from \"../utils\";\n\ntype ViewId = keyof typeof google.picker.ViewId;\n\n/**\n * The `drive-picker-docs-view` element is used to define a [`google.picker.DocsView`](https://developers.google.com/drive/picker/reference/picker.docsview).\n *\n * @element drive-picker-docs-view\n * @attr {\"default\"|\"true\"|\"false\"} enable-drives - Whether to allow the user to select files from shared drives. See [`DocsView.enableDrives`](https://developers.google.com/drive/picker/reference/picker.docsview.setenabledrives).\n * @attr {\"default\"|\"true\"|\"false\"} include-folders - Whether to include folders in the view. See [`DocsView.includeFolders`](https://developers.google.com/drive/picker/reference/picker.docsview.setincludefolders).\n * @attr {string} mime-types - A comma-separated list of MIME types to filter the view. See [`View.setMimeTypes`](https://developers.google.com/drive/picker/reference/picker.view.setmimetypes).\n * @attr {string} file-ids - A comma-separated list of file IDs to filter the view. See [`View.setFileIds`](https://developers.google.com/workspace/drive/picker/reference/picker.docsview.setfileids).\n * @attr {string} mode - The mode of the view. See [`DocsViewMode`](https://developers.google.com/drive/picker/reference/picker.docsviewmode).\n * @attr {\"default\"|\"true\"|\"false\"} owned-by-me - Whether to show files owned by the user. See [`DocsView.ownedByMe`](https://developers.google.com/drive/picker/reference/picker.docsview.setownedbyme).\n * @attr {string} parent - The ID of the folder to view. See [`DocsView.setParent`](https://developers.google.com/drive/picker/reference/picker.docsview.setparent).\n * @attr {string} query - The query string to filter the view. See [`View.setQuery`](https://developers.google.com/drive/picker/reference/picker.view.setquery).\n * @attr {\"default\"|\"true\"|\"false\"} select-folder-enabled - Whether to allow the user to select folders. See [`DocsView.selectFolderEnabled`](https://developers.google.com/drive/picker/reference/picker.docsview.setselectfolderenabled).\n * @attr {\"default\"|\"true\"|\"false\"} starred - Whether to show starred files. See [`DocsView.starred`](https://developers.google.com/drive/picker/reference/picker.docsview.setstarred).\n * @attr {string} view-id - The `keyof typeof google.picker.ViewId`. For example, `\"DOCS\"`, which is equivalent to `google.picker.ViewId.DOCS`. See [`ViewId`](https://developers.google.com/drive/picker/reference/picker.viewid).\n *\n * @example\n *\n * ```html\n * <drive-picker-docs-view ownedByMe=\"\"></drive-picker-docs-view>\n * ```\n *\n * @see https://developers.google.com/drive/picker/reference/picker.docsview\n *\n */\nexport class DrivePickerDocsViewElement extends HTMLElement {\n\tstatic get observedAttributes() {\n\t\treturn [\n\t\t\t\"enable-drives\",\n\t\t\t\"file-ids\",\n\t\t\t\"include-folders\",\n\t\t\t\"mime-types\",\n\t\t\t\"mode\",\n\t\t\t\"owned-by-me\",\n\t\t\t\"parent\",\n\t\t\t\"query\",\n\t\t\t\"select-folder-enabled\",\n\t\t\t\"starred\",\n\t\t\t\"view-id\",\n\t\t];\n\t}\n\n\t/**\n\t * Gets the Google Drive Picker view based on the current attribute values.\n\t * @returns {google.picker.DocsView} The Google Drive picker view.\n\t */\n\tpublic get view(): google.picker.DocsView {\n\t\tconst view = new window.google.picker.DocsView(this.viewId);\n\n\t\tsetBoolAttrWithDefault(\"enable-drives\", this, view.setEnableDrives, view);\n\t\tsetBoolAttrWithDefault(\n\t\t\t\"include-folders\",\n\t\t\tthis,\n\t\t\tview.setIncludeFolders,\n\t\t\tview,\n\t\t);\n\t\tsetBoolAttrWithDefault(\"owned-by-me\", this, view.setOwnedByMe, view);\n\t\tsetBoolAttrWithDefault(\n\t\t\t\"select-folder-enabled\",\n\t\t\tthis,\n\t\t\tview.setSelectFolderEnabled,\n\t\t\tview,\n\t\t);\n\t\tsetBoolAttrWithDefault(\"starred\", this, view.setStarred, view);\n\n\t\tconst mimetypes = this.getAttribute(\"mime-types\");\n\t\tif (mimetypes !== null) view.setMimeTypes(mimetypes);\n\n\t\tconst fileIds = this.getAttribute(\"file-ids\");\n\t\tif (fileIds !== null) view.setFileIds(fileIds);\n\n\t\tconst mode = this.getAttribute(\"mode\");\n\t\tif (mode)\n\t\t\tview.setMode(\n\t\t\t\tgoogle.picker.DocsViewMode[\n\t\t\t\t\tmode as keyof typeof google.picker.DocsViewMode\n\t\t\t\t],\n\t\t\t);\n\n\t\tconst parent = this.getAttribute(\"parent\");\n\t\tif (parent !== null) view.setParent(parent);\n\n\t\tconst query = this.getAttribute(\"query\");\n\t\tif (query !== null) view.setQuery(query);\n\n\t\treturn view;\n\t}\n\n\tprivate get viewId(): google.picker.ViewId | undefined {\n\t\tconst viewId = this.getAttribute(\"view-id\");\n\t\treturn viewId ? window.google.picker.ViewId[viewId as ViewId] : undefined;\n\t}\n}\n", "/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n\tDrivePickerDocsViewElement,\n\ttype DrivePickerDocsViewElementProps,\n\tDrivePickerElement,\n\ttype DrivePickerElementProps,\n\ttype OAuthErrorEvent,\n\ttype OAuthResponseEvent,\n\ttype PickerCanceledEvent,\n\ttype PickerErrorEvent,\n\ttype PickerPickedEvent,\n} from \"./drive-picker\";\n\ncustomElements.define(\"drive-picker\", DrivePickerElement);\ncustomElements.define(\"drive-picker-docs-view\", DrivePickerDocsViewElement);\n\ndeclare global {\n\tinterface HTMLElementTagNameMap {\n\t\t\"drive-picker\": DrivePickerElement;\n\t}\n\tinterface HTMLElementTagNameMap {\n\t\t\"drive-picker-docs-view\": DrivePickerDocsViewElement;\n\t}\n}\n\nexport type {\n\tDrivePickerElement,\n\tDrivePickerDocsViewElement,\n\tDrivePickerElementProps,\n\tDrivePickerDocsViewElementProps,\n\tOAuthErrorEvent,\n\tOAuthResponseEvent,\n\tPickerCanceledEvent,\n\tPickerErrorEvent,\n\tPickerPickedEvent,\n};\n"],
  "mappings": "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",
  "names": ["GAPI_URL", "GSI_URL", "loadApi", "api", "injectScript", "r", "requestAccessToken", "tokenClientConfig", "resolve", "reject", "src", "getNumberAttribute", "element", "name", "value", "BoolAttrWithDefault", "getBoolAttr", "getBoolAttrWithDefault", "attributeValue", "setBoolAttrWithDefault", "setter", "instance", "attr", "DrivePickerElement", "clientId", "scope", "builder", "data", "appId", "developerKey", "locale", "maxItems", "origin", "relayUrl", "title", "oauthToken", "view", "views", "nestedViews", "google", "mutations", "mutation", "detail", "eventTypes", "eventType", "response", "token", "error", "isView", "obj", "filterElementsToViewOrViewGroup", "elements", "target", "selector", "DrivePickerDocsViewElement", "mimetypes", "fileIds", "mode", "parent", "query", "viewId"]
}
